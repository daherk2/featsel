// NystromSpecCMITest.cpp automatically generated by bin/add_new_algorithm.pl
// in Wed Feb  7 12:10:39 2018.

//
// NystromSpecCMITest.cpp -- implementation of the namespace "NystromSpecCMITest".
//
//    This file is part of the featsel program
//    Copyright (C) 2017  Author
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

#include "NystromSpecCMITest.h"
#include "../../src/algorithms/SpecCMI.h"



namespace NystromSpecCMITest
{
  
  bool it_should_sample_SpecCMI_Q_matrix ()
  {
    bool result = true;
    double nystrom_sampling_rate = .9;
    unsigned int n, p;
    n = 10;
    p = n * nystrom_sampling_rate;

    ElementSet set1 (2, "input/Breast_cancer/Test_01_A.dat", 10);
    ConditionalMutualInformation c (&set1);
    SpecCMI A1;
    A1.set_parameters (&c, &set1, true);
    A1.compute_Q_matrix ();

    ElementSet set2 (2, "input/Breast_cancer/Test_01_A.dat", 10);
    NystromSpecCMI A2 (nystrom_sampling_rate);
    A2.set_parameters (&c, &set2, true);
    A2.sample_Q ();

    for (unsigned int i = 0; i < p; i++)
      for (unsigned int j = 0; j < n; j++)
        if (A2.get_Q_sample (i, j) != A1.get_Q_matrix_value (i, j))
          result = false;

    A2.rank_features ();

    return result;
  }

} // end of namespace
